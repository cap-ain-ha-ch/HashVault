TODO
----

[Process]

=> CREATING MASTER PASSWD.
--------------------------
-> When creating master passwd create login_salt, encryption_salt.
-> login_salt is used for salting the master passwd for hashing.
-> encryption_salt is used for deriving aes key.

=> WHILE LOGIN.
---------------
-> Salt the input passwd with login_salt, hash it and compare it with stored hashed passwd. 
-> if (correct_passwd):
		-> AES key for entry encryption, decryption using input passwd and encryption_salt.
		-> A 16 byte initial vector for encryption/decyption with aes key.
		-> encrypt or decrypt the entries as need using the genrated AES key.
   else:
		-> exit(1)

=> NOTE:
--------
-> When master passwd is reset so should the login_salt, encryption_salt.
-> Then the whole database should be rencrypted with the new AES key.

[Tables]

=> Meta_table
-------------

[Hashed master passwd salted with login_salt | login_salt | encryption_salt]

=> Credential_table
-------------------

[ID | Site/App | Username | Password (encrypted) | IV]
